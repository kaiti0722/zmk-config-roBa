#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>

/ {
    chosen {
        zmk,physical-layout = &roba_physical_layout;
    };
    
    roba_physical_layout: roba_physical_layout {
        compatible = "zmk,physical-layout";
        display-name = "Default";
        transform = <&default_transform>;
        kscan = <&kscan0>;

        keys  //                     w   h    x    y     rot    rx    ry
            // 左手
            = <&key_physical_attrs 100 100    0    0       0     0     0>  // Q
            , <&key_physical_attrs 100 100  100    0       0     0     0>  // W
            , <&key_physical_attrs 100 100  200    0       0     0     0>  // E
            , <&key_physical_attrs 100 100  300    0       0     0     0>  // R
            , <&key_physical_attrs 100 100  400    0       0     0     0>  // T
            , <&key_physical_attrs 100 100    0  100       0     0     0>  // A
            , <&key_physical_attrs 100 100  100  100       0     0     0>  // S
            , <&key_physical_attrs 100 100  200  100       0     0     0>  // D
            , <&key_physical_attrs 100 100  300  100       0     0     0>  // F
            , <&key_physical_attrs 100 100  400  100       0     0     0>  // G
            , <&key_physical_attrs 100 100    0  200       0     0     0>  // Z
            , <&key_physical_attrs 100 100  100  200       0     0     0>  // X
            , <&key_physical_attrs 100 100  200  200       0     0     0>  // C
            , <&key_physical_attrs 100 100  300  200       0     0     0>  // V
            , <&key_physical_attrs 100 100  400  200       0     0     0>  // B
            , <&key_physical_attrs 100 100    0  300       0     0     0>  // Ctrl
            , <&key_physical_attrs 100 100  100  300       0     0     0>  // Alt
            , <&key_physical_attrs 100 100  200  300       0     0     0>  // Layer1
            , <&key_physical_attrs 100 100  300  300       0     0     0>  // Space
            , <&key_physical_attrs 100 100  400  300       0     0     0>  // Cmd
            // 右手
            , <&key_physical_attrs 100 100  600    0       0     0     0>  // Y
            , <&key_physical_attrs 100 100  700    0       0     0     0>  // U
            , <&key_physical_attrs 100 100  800    0       0     0     0>  // I
            , <&key_physical_attrs 100 100  900    0       0     0     0>  // O
            , <&key_physical_attrs 100 100 1000    0       0     0     0>  // P
            , <&key_physical_attrs 100 100  600  100       0     0     0>  // H
            , <&key_physical_attrs 100 100  700  100       0     0     0>  // J
            , <&key_physical_attrs 100 100  800  100       0     0     0>  // K
            , <&key_physical_attrs 100 100  900  100       0     0     0>  // L
            , <&key_physical_attrs 100 100 1000  100       0     0     0>  // ;
            , <&key_physical_attrs 100 100  600  200       0     0     0>  // N
            , <&key_physical_attrs 100 100  700  200       0     0     0>  // M
            , <&key_physical_attrs 100 100  800  200       0     0     0>  // ,
            , <&key_physical_attrs 100 100  900  200       0     0     0>  // .
            , <&key_physical_attrs 100 100 1000  200       0     0     0>  // /
            , <&key_physical_attrs 100 100  600  300       0     0     0>  // Cmd
            , <&key_physical_attrs 100 100  700  300       0     0     0>  // Space
            , <&key_physical_attrs 100 100  800  300       0     0     0>  // Layer2
            , <&key_physical_attrs 100 100  900  300       0     0     0>  // Alt
            , <&key_physical_attrs 100 100 1000  300       0     0     0>  // Ctrl
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;               
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)      RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)      RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)      RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4)      RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)           
        >;
    };
    
    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
            row-gpios
                = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> 
                , <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> 
                , <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> 
                , <&xiao_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> 			
                ;
    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <12>;
        status = "disabled";
    };

    right_encoder: encoder_right {
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <10>;
    };
};
